plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.3'
    id 'io.spring.dependency-management' version '1.1.4'
}

group = 'com.interview.manager'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '21'
}

repositories {
    mavenCentral()
}

dependencies {
    // Spring Boot starters for core functionality
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    // Database and Liquibase for database migrations
    runtimeOnly 'org.postgresql:postgresql'
//    implementation 'org.liquibase:liquibase-core' // Useful tool for database migrations, but required db configuration for now

    // Lombok to reduce boilerplate code
    compileOnly libs.lombok
    annotationProcessor libs.lombok

    // MapStruct for object mapping
    implementation libs.mapstruct
    annotationProcessor libs.mapstruct.processor
    annotationProcessor libs.lombok.mapstruct.binding

    // Hibernate Validation Engine
    ext {
        libs = [
                hibernate: 'version_number'
                // Other dependencies can be listed here
        ]
    }

    // Configure dependencies
    dependencies {
        // Hibernate Validation Engine
        implementation "org.hibernate.validator:hibernate-validator:"
    }

    // Spring Boot starters for testing
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
}

jar {
    enabled = false
}

bootJar {
    archiveClassifier = ''
    enabled = true
}

tasks.named('test') {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
    }
}
